# Total Votes Cast
tot_vot <- ggplot(elections_filtered, aes(x = County, y = `Total Votes Cast`)) +
geom_bar(stat = "identity", fill = "green") +
scale_y_continuous(labels = comma) +
labs(title = "Total Votes Per County",
x = "County",
y = "Votes",
caption = "Data: IEBC") +
theme(axis.text.x = element_text(angle = 90, vjust = 1, hjust = 1, size = 8.5),
plot.title = element_text(hjust = 0.5, size = 16),
plot.caption = element_text(hjust = 1),
legend.title = element_blank())
tot_vot
# Rejected Votes
# Creating a Bar Chart of Rejected Votes
rej_vot <- ggplot(elections_filtered, aes(x = County, y = Rejected)) +
geom_bar(stat = "identity", fill = "firebrick") +
scale_y_continuous(labels = comma) +
labs(title = "Rejected Votes Per County",
x = "County",
y = "Votes",
caption = "Data: IEBC") +
theme(axis.text.x = element_text(angle = 90, vjust = 1, hjust = 1, size = 8.5),
plot.title = element_text(hjust = 0.5, size = 16),
plot.caption = element_text(hjust = 1),
legend.title = element_blank())
rej_vot
# Voter Turnout Per IEBC
# Ensure percentages are numeric
elections_filtered$Voter_TurnOut <- as.numeric(sub("%", "", elections_filtered$Voter_TurnOut))
turnout <- ggplot(elections_filtered, aes(x = County, y = `Voter_TurnOut`)) +
geom_bar(stat = "identity", fill = "green2") +
scale_y_continuous(labels = scales::percent_format(scale = 1)) +
labs(title = "Voter TurnOut Per County",
x = "County",
y = "Turn Out",
caption = "Data: IEBC") +
theme(axis.text.x = element_text(angle = 90, vjust = 1, hjust = 1, size = 8.5),
plot.title = element_text(hjust = 0.5, size = 16),
plot.caption = element_text(hjust = 1),
legend.title = element_blank()) +
# Add horizontal dotted line at 50%
geom_hline(yintercept = 50, linetype = "dashed", color = "red", linewidth = 1)
turnout
# Raila Odinga Votes Per IEBC
rao <- ggplot(elections_filtered, aes(x = County, y = `Raila-IEBC`)) +
geom_bar(stat = "identity", fill = "blue4") +
scale_y_continuous(labels = comma) +
labs(title = "Odinga's Votes Per County",
x = "County",
y = "Votes",
caption = "Data: IEBC") +
theme(axis.text.x = element_text(angle = 90, vjust = 1, hjust = 1, size = 8.5),
plot.title = element_text(hjust = 0.5, size = 16),
plot.caption = element_text(hjust = 1),
legend.title = element_blank())
rao
# William Ruto Votes Per IEBC
ruto <- ggplot(elections_filtered, aes(x = County, y = `Ruto-IEBC`)) +
geom_bar(stat = "identity", fill = "yellow") +
scale_y_continuous(labels = comma) +
labs(title = "Ruto's Votes Per County",
x = "County",
y = "Votes",
caption = "Data: IEBC") +
theme(axis.text.x = element_text(angle = 90, vjust = 1, hjust = 1, size = 8.5),
plot.title = element_text(hjust = 0.5, size = 16),
plot.caption = element_text(hjust = 1),
legend.title = element_blank())
ruto
# Wajackoyah Votes Per IEBC
wajackoyah <- ggplot(elections_filtered, aes(x = County, y = `Wajackoyah`)) +
geom_bar(stat = "identity", fill = "green3") +
scale_y_continuous(labels = comma) +
labs(title = "Wajackoyah's Votes Per County",
x = "County",
y = "Votes",
caption = "Data: IEBC") +
theme(axis.text.x = element_text(angle = 90, vjust = 1, hjust = 1, size = 8.5),
plot.title = element_text(hjust = 0.5, size = 16),
plot.caption = element_text(hjust = 1),
legend.title = element_blank())
wajackoyah
# Waihiga Votes Per IEBC
waihiga <- ggplot(elections_filtered, aes(x = County, y = `Waihiga`)) +
geom_bar(stat = "identity", fill = "purple3") +
scale_y_continuous(labels = comma) +
labs(title = "Waihiga's Votes Per County",
x = "County",
y = "Votes",
caption = "Data: IEBC") +
theme(axis.text.x = element_text(angle = 90, vjust = 1, hjust = 1, size = 8.5),
plot.title = element_text(hjust = 0.5, size = 16),
plot.caption = element_text(hjust = 1),
legend.title = element_blank())
waihiga
# Differential of Voting Results between IEBC and Independent Observers
# Reshape data into long format using pivot_longer
data_long <- elections_filtered %>%
pivot_longer(cols = c(`RAO Diff`, `WSR Diff`),
names_to = "Candidate",
values_to = "Difference")
comparison = ggplot(data_long, aes(x = County, y = Difference, fill = Candidate)) +
geom_bar(stat = "identity") +
labs(title = "Differential of Results between IEBC and Independent Observers",
x = "County", y = "Difference",
fill = "Candidate") +
theme(axis.text.x = element_text(angle = 90, vjust = 1, hjust = 1, size = 8.5),
plot.title = element_text(hjust = 0.5, size = 16),
plot.caption = element_text(hjust = 1),
legend.title = element_blank())
comparison
View(elections_filtered)
comparison = ggplot(data_long, aes(x = County, y = Difference, fill = Candidate)) +
geom_bar(stat = "identity") +
labs(title = "Differential of Voting Results between IEBC and Independent Observers",
x = "County", y = "Difference",
fill = "Candidate") +
theme(axis.text.x = element_text(angle = 90, vjust = 1, hjust = 1, size = 8.5),
plot.title = element_text(hjust = 0.5, size = 16),
plot.caption = element_text(hjust = 1),
legend.title = element_blank())
comparison
# Summarize the total votes for each candidate/column
totals <- elections_filtered %>%
select(`Raila-IEBC`, `Ruto-IEBC`, Wajackoyah, Waihiga, Rejected) %>%
summarise(across(everything(), sum, na.rm = TRUE)) %>%
pivot_longer(cols = everything(), names_to = "Candidate", values_to = "Votes")
# Calculate the percentage of each category
totals <- totals %>%
mutate(Percentage = Votes / sum(Votes) * 100)
# Modify Candidate names for legend
totals$Candidate <- recode(totals$Candidate,
`Raila-IEBC` = "Raila",
`Ruto-IEBC` = "Ruto")
# Create the pie chart with percentages
final = ggplot(totals, aes(x = "", y = Votes, fill = Candidate)) +
geom_bar(stat = "identity", width = 1) +
coord_polar(theta = "y") +
geom_text(aes(label = paste0(round(Percentage, 1), "%")), position = position_stack(vjust = 0.5)) +
# Add percentages as labels
labs(title = "Presidential Election Results",
x = NULL, y = NULL, caption = "Data:IEBC") +
theme_void() +  # Clean up axes and background
theme(legend.title = element_blank(),
legend.position = "right",  # Position legend to the right
plot.title = element_text(hjust = 0.5, size = 12))  # Center title
final
# Combined Plots
(rao + ruto) /
(wajackoyah + waihiga)
# Combined Overall Election Data
(reg_vot + tot_vot + rej_vot) /
(turnout + comparison + final)
# Combined Overall Election Data
(reg_vot + tot_vot ) /
(rej_vot + turnout)
# Combined Overall Election Data -2
(comparison)/
(final)
# Combined Overall Election Data -2
(comparison + final)
ggthemr("light")
library("ggthemr")
ggthemr("light")
theme_set(theme_test())
reg_vot
ggthemr("camouflage")
theme_set(theme_test())
reg_vot
# Registered Voters
# Create a bar chart of votes by candidate
reg_vot <- ggplot(elections_filtered, aes(x = County, y = Reg_Voters)) +
geom_bar(stat = "identity", fill = "gold4") +
scale_y_continuous(labels = comma) +
labs(title = "Registered Voters Per County",
x = "County",
y = "Voters",
caption = "Data: IEBC") +
theme(axis.text.x = element_text(angle = 90, vjust = 1, hjust = 1, size = 8.5),
plot.title = element_text(hjust = 0.5, size = 16),
plot.caption = element_text(hjust = 1),
legend.title = element_blank())
reg_vot
library("ggthemr")
ggthemr("dust")
reg_vot
ggthemr("camouflage")
reg_vot
# Registered Voters
# Create a bar chart of votes by candidate
reg_vot <- ggplot(elections_filtered, aes(x = County, y = Reg_Voters)) +
geom_bar(stat = "identity", fill = "gold4") +
scale_y_continuous(labels = comma) +
labs(title = "Registered Voters Per County",
x = "County",
y = "Voters",
caption = "Data: IEBC") +
theme(axis.text.x = element_text(angle = 90, vjust = 1, hjust = 1, size = 8.5),
plot.title = element_text(hjust = 0.5, size = 16),
plot.caption = element_text(hjust = 1),
legend.title = element_blank())
reg_vot
reg_vot
tot_vot
rej_vot
turnout
rao
ggthemr("flat")
library("ggthemr")
ggthemr("flat")
reg_vot
ggthemr("flatdark")
ggthemr("flat dark")
reg_vot
ggthemr("dust")
reg_vot
ggthemr("earth")
reg_vot
ggthemr("fresh")
reg_vot
ggthemr("chalk")
reg_vot
ggthemr("lilac")
reg_vot
ggthemr("carrot")
reg_vot
ggthemr("pale")
reg_vot
ggthemr("copper")
reg_vot
ggthemr("grape")
reg_vot
ggthemr("greyscale")
reg_vot
ggthemr("sky")
reg_vot
ggthemr("solarized")
reg_vot
ggthemr("grass")
reg_vot
ggthemr("sea")
reg_vot
ggthemr("pale")
reg_vot
ggthemr("chalk")
reg_vot
ggthemr("pale")
reg_vot
ggthemr("dust")
reg_vot
ggthemr("pale")
reg_vot
reg_vot
tot_vot
rej_vot
ggthemr("light")
library("ggthemr")
ggthemr("light")
# Combined Voter Count per Candidate per County
(rao + ruto) /
(wajackoyah + waihiga)
# Combined Overall Election Data -1
(reg_vot + tot_vot ) /
(rej_vot + turnout)
# Combined Overall Election Data -2
(comparison + final)
theme_set(theme_test())
# Combined Voter Count per Candidate per County
(rao + ruto) /
(wajackoyah + waihiga)
# Combined Overall Election Data -1
(reg_vot + tot_vot ) /
(rej_vot + turnout)
# Combined Overall Election Data -2
(comparison + final)
library(ggrepel)
library(ggrepel)
# Create the pie chart
final <- ggplot(totals, aes(x = "", y = Votes, fill = Candidate)) +
geom_bar(stat = "identity", width = 1) +
coord_polar(theta = "y") +
geom_label_repel(aes(label = paste0(round(Percentage, 1), "%"),
y = cumsum(Votes) - Votes / 2),
nudge_x = 1, show.legend = FALSE,
direction = "y", size = 3) +  # Adjust size as needed
labs(title = "Presidential Election Results",
x = NULL, y = NULL, caption = "Data: IEBC") +
theme_void() +
theme(legend.title = element_blank(),
legend.position = "right",
plot.title = element_text(hjust = 0.5, size = 12))  # Center title
final
# Create the pie chart
final <- ggplot(totals, aes(x = "", y = Votes, fill = Candidate)) +
geom_bar(stat = "identity", width = 1) +
coord_polar(theta = "y") +
geom_label_repel(
aes(
y = cumsum(Votes) - Votes / 2,
label = paste0(Candidate, " - ", round(Percentage, 1), "%")
),
nudge_x = 1,
show.legend = FALSE,
direction = "y",
size = 3
) +
labs(
title = "Presidential Election Results",
x = NULL, y = NULL,
caption = "Data: IEBC"
) +
theme_void() +
theme(
legend.title = element_blank(),
legend.position = "right",
plot.title = element_text(hjust = 0.5, size = 12)
)
final
# Create the pie chart with percentages
final = ggplot(totals, aes(x = "", y = Votes, fill = Candidate)) +
geom_bar(stat = "identity", width = 1) +
coord_polar(theta = "y") +
geom_text(aes(label = paste0(round(Percentage, 1), "%")), position = position_stack(vjust = 0.5)) +
# Add percentages as labels
labs(title = "Presidential Election Results",
x = NULL, y = NULL, caption = "Data:IEBC") +
theme_void() +  # Clean up axes and background
theme(legend.title = element_blank(),
legend.position = "right",  # Position legend to the right
plot.title = element_text(hjust = 0.5, size = 12))  # Center title
final
# Load ggrepel package
library(ggrepel)
# Create a flag column to identify the two candidates
totals$LabelType <- ifelse(totals$Candidate %in% c("Waihiga", "Wajackoyah"), "outside", "inside")
# Compute positions for text repel
totals <- totals %>%
arrange(desc(Candidate)) %>%
mutate(pos = cumsum(Votes) - Votes / 2)
# Create the pie chart
final <- ggplot(totals, aes(x = "", y = Votes, fill = Candidate)) +
geom_bar(stat = "identity", width = 1) +
coord_polar(theta = "y") +
# Inside labels
geom_text(data = subset(totals, LabelType == "inside"),
aes(label = paste0(round(Percentage, 1), "%")),
position = position_stack(vjust = 0.5),
color = "white") +
# Outside labels with lines
geom_text_repel(data = subset(totals, LabelType == "outside"),
aes(label = paste0(Candidate, ": ", round(Percentage, 1), "%"), y = pos),
nudge_x = 1.2,
direction = "y",
segment.size = 0.5,
segment.color = "grey50",
show.legend = FALSE) +
labs(title = "Presidential Election Results",
x = NULL, y = NULL, caption = "Data: IEBC") +
theme_void() +
theme(legend.title = element_blank(),
legend.position = "right",
plot.title = element_text(hjust = 0.5, size = 12))
final
final
# Create the pie chart
final <- ggplot(totals, aes(x = "", y = Votes, fill = Candidate)) +
geom_bar(stat = "identity", width = 1) +
coord_polar(theta = "y") +
# Inside labels
geom_text(data = subset(totals, LabelType == "inside"),
aes(label = paste0(round(Percentage, 1), "%")),
position = position_stack(vjust = 0.5),
color = "white") +
# Outside labels with lines
geom_text_repel(data = subset(totals, LabelType == "outside"),
aes(label = paste0(Candidate, ": ", round(Percentage, 1), "%"), y = pos),
nudge_x = 1.2,
direction = "x",
segment.size = 0.5,
segment.color = "grey50",
show.legend = FALSE) +
labs(title = "Presidential Election Results",
x = NULL, y = NULL, caption = "Data: IEBC") +
theme_void() +
theme(legend.title = element_blank(),
legend.position = "right",
plot.title = element_text(hjust = 0.5, size = 12))
final
# Create the pie chart
final <- ggplot(totals, aes(x = "", y = Votes, fill = Candidate)) +
geom_bar(stat = "identity", width = 1) +
coord_polar(theta = "y") +
# Inside labels
geom_text(data = subset(totals, LabelType == "inside"),
aes(label = paste0(round(Percentage, 1), "%")),
position = position_stack(vjust = 0.5),
color = "white") +
# Outside labels with lines
geom_text_repel(data = subset(totals, LabelType == "outside"),
aes(label = paste0(Candidate, ": ", round(Percentage, 1), "%"), x = pos),
nudge_x = 1.2,
direction = "x",
segment.size = 0.5,
segment.color = "grey50",
show.legend = FALSE) +
labs(title = "Presidential Election Results",
x = NULL, y = NULL, caption = "Data: IEBC") +
theme_void() +
theme(legend.title = element_blank(),
legend.position = "right",
plot.title = element_text(hjust = 0.5, size = 12))
final
# Create the pie chart
final <- ggplot(totals, aes(x = "", y = Votes, fill = Candidate)) +
geom_bar(stat = "identity", width = 1) +
coord_polar(theta = "y") +
# Inside labels
geom_text(data = subset(totals, LabelType == "inside"),
aes(label = paste0(round(Percentage, 1), "%")),
position = position_stack(vjust = 0.5),
color = "white") +
# Outside labels with lines
geom_text_repel(data = subset(totals, LabelType == "outside"),
aes(label = paste0(Candidate, ": ", round(Percentage, 1), "%"), y = pos),
nudge_x = 1.2,
direction = "x",
segment.size = 0.5,
segment.color = "grey50",
show.legend = FALSE) +
labs(title = "Presidential Election Results",
x = NULL, y = NULL, caption = "Data: IEBC") +
theme_void() +
theme(legend.title = element_blank(),
legend.position = "right",
plot.title = element_text(hjust = 0.5, size = 12))
final
# Create the pie chart
final <- ggplot(totals, aes(x = "", y = Votes, fill = Candidate)) +
geom_bar(stat = "identity", width = 1) +
coord_polar(theta = "y") +
# Inside labels
geom_text(data = subset(totals, LabelType == "inside"),
aes(label = paste0(round(Percentage, 1), "%")),
position = position_stack(vjust = 0.5),
color = "white") +
# Outside labels with lines
geom_text_repel(data = subset(totals, LabelType == "outside"),
aes(label = paste0(Candidate, ": ", round(Percentage, 1), "%"), y = pos),
nudge_x = 1.8,
direction = "x",
segment.size = 0.5,
segment.color = "grey50",
show.legend = FALSE) +
labs(title = "Presidential Election Results",
x = NULL, y = NULL, caption = "Data: IEBC") +
theme_void() +
theme(legend.title = element_blank(),
legend.position = "right",
plot.title = element_text(hjust = 0.5, size = 12))
final
# Create the pie chart
final <- ggplot(totals, aes(x = "", y = Votes, fill = Candidate)) +
geom_bar(stat = "identity", width = 1) +
coord_polar(theta = "y") +
# Inside labels
geom_text(data = subset(totals, LabelType == "inside"),
aes(label = paste0(round(Percentage, 1), "%")),
position = position_stack(vjust = 0.5),
color = "white") +
# Outside labels with lines
geom_text_repel(data = subset(totals, LabelType == "outside"),
aes(label = paste0(Candidate, ": ", round(Percentage, 1), "%"), y = pos),
nudge_x = 1.0,
direction = "x",
segment.size = 0.5,
segment.color = "grey50",
show.legend = FALSE) +
labs(title = "Presidential Election Results",
x = NULL, y = NULL, caption = "Data: IEBC") +
theme_void() +
theme(legend.title = element_blank(),
legend.position = "right",
plot.title = element_text(hjust = 0.5, size = 12))
final
# Create the pie chart with percentages
final = ggplot(totals, aes(x = "", y = Votes, fill = Candidate)) +
geom_bar(stat = "identity", width = 1) +
coord_polar(theta = "y") +
geom_text(aes(label = paste0(round(Percentage, 1), "%")), position = position_stack(vjust = 0.5)) +
# Add percentages as labels
labs(title = "Presidential Election Results",
x = NULL, y = NULL, caption = "Data:IEBC") +
theme_void() +  # Clean up axes and background
theme(legend.title = element_blank(),
legend.position = "right",  # Position legend to the right
plot.title = element_text(hjust = 0.5, size = 12))  # Center title
final
final
ggsave("final_piechart.png", plot = final, width = 8, height = 6, dpi = 300)
# Combined Voter Count per Candidate per County
vcpcpc = (rao + ruto) /
(wajackoyah + waihiga)
ggsave("Combined Voter Count per Candidate per County.png", plot = vcpcpc, width = 8, height = 6, dpi = 300)
ggsave("Final Presidential Results.png", plot = final, width = 8, height = 6, dpi = 300)
ggsave("Registered Voters per County.png", plot = reg_vot, width = 8, height = 6, dpi = 300)
ggsave("Total Votes Cast per County.png", plot = tot_vot, width = 8, height = 6, dpi = 300)
ggsave("Rejected Votes Cast per County.png", plot = rej_vot, width = 8, height = 6, dpi = 300)
ggsave("Voter Turnout per County.png", plot = turnout, width = 8, height = 6, dpi = 300)
View(vcpcpc)
ggsave("Vote Differentials per County.png", plot = comparison, width = 8, height = 6, dpi = 300)
ggsave("Candidate Votes per County.png", plot = vcpcpc, width = 12, height = 6, dpi = 300)
